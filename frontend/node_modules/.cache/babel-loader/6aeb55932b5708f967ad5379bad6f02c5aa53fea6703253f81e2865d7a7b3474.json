{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import axios from'axios';import LoadingSpinner from'./LoadingSpinner';import VoiceButton from'./VoiceButton';import ChatBubble from'./ChatBubble';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChatbotSection(_ref){let{selectedProductSKU,setSelectedProductSKU}=_ref;const handleProductClick=sku=>setSelectedProductSKU(sku);const[messages,setMessages]=useState([{sender:'agent',text:'Hi! What can I help you with?',timestamp:new Date().toLocaleString()}]);const[input,setInput]=useState('');const[loading,setLoading]=useState(false);const chatEndRef=useRef(null);useEffect(()=>{var _chatEndRef$current;(_chatEndRef$current=chatEndRef.current)===null||_chatEndRef$current===void 0?void 0:_chatEndRef$current.scrollIntoView({behavior:'smooth'});},[messages,loading]);const handleSend=async e=>{e.preventDefault();if(!input.trim()||loading)return;const userMsg={sender:'user',text:input};setMessages(msgs=>[...msgs,userMsg]);setInput('');setLoading(true);try{let sessionId=localStorage.getItem('sessionId');if(!sessionId){var _window$crypto,_window$crypto$random;sessionId=((_window$crypto=window.crypto)===null||_window$crypto===void 0?void 0:(_window$crypto$random=_window$crypto.randomUUID)===null||_window$crypto$random===void 0?void 0:_window$crypto$random.call(_window$crypto))||Date.now().toString();localStorage.setItem('sessionId',sessionId);}const res=await axios.post(\"\".concat(process.env.REACT_APP_API_URL||'http://localhost:5000',\"/api/chat\"),{message:input,history:messages,sessionId});// Check if the response looks like a tool call for openProductDetail\nlet botMsg=res.data.reply;let productMsg=null;try{var _parsed$tool_input;const parsed=typeof botMsg==='string'?JSON.parse(botMsg):botMsg;if(parsed&&parsed.tool==='openProductDetail'&&(_parsed$tool_input=parsed.tool_input)!==null&&_parsed$tool_input!==void 0&&_parsed$tool_input.id){// Fetch product detail from backend\nconst prodRes=await axios.post('http://localhost:5000/api/openProductDetail',{sku:parsed.tool_input.id});if(prodRes.data&&prodRes.data.product){const p=prodRes.data.product;productMsg=\"Product Details\\nName: \".concat(p.name||'',\"\\nSKU: \").concat(p.SKU||'',\"\\nPrice: $\").concat(p.price||'',\"\\n\").concat(p.description?'Description: '+p.description+'\\n':'').concat(p.URL?'URL: '+p.URL:'');}else{productMsg='Product not found.';}}}catch(err){/* Not a tool call, treat as normal reply */}setMessages(msgs=>[...msgs,{sender:'agent',text:productMsg||(typeof botMsg==='string'?botMsg:JSON.stringify(botMsg))}]);}catch(err){setMessages(msgs=>[...msgs,{sender:'agent',text:'Sorry, there was an error connecting to the assistant.'}]);}setLoading(false);};const handleClear=()=>{setMessages([{sender:'agent',text:'Hi! What can I help you with?'}]);setInput('');localStorage.removeItem('sessionId');};return/*#__PURE__*/_jsxs(\"section\",{className:\"chatbot-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-title\",children:\"Chatbot\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-clear\",onClick:handleClear,children:\"Clear Chat\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-messages\",children:[messages.map((msg,idx)=>/*#__PURE__*/_jsx(ChatBubble,{message:msg,onProductClick:handleProductClick},idx)),loading&&/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',padding:8},children:/*#__PURE__*/_jsx(LoadingSpinner,{})}),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"chatbot-input\",onSubmit:handleSend,style:{display:'flex',alignItems:'center',gap:8},children:[/*#__PURE__*/_jsx(\"input\",{value:input,onChange:e=>setInput(e.target.value),placeholder:\"Type a message...\",style:{flex:1}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:{minWidth:60},children:\"Send\"}),/*#__PURE__*/_jsx(VoiceButton,{disabled:loading,onResult:t=>setInput(t)})]})]});}","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","LoadingSpinner","VoiceButton","ChatBubble","jsx","_jsx","jsxs","_jsxs","ChatbotSection","_ref","selectedProductSKU","setSelectedProductSKU","handleProductClick","sku","messages","setMessages","sender","text","timestamp","Date","toLocaleString","input","setInput","loading","setLoading","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","handleSend","e","preventDefault","trim","userMsg","msgs","sessionId","localStorage","getItem","_window$crypto","_window$crypto$random","window","crypto","randomUUID","call","now","toString","setItem","res","post","concat","process","env","REACT_APP_API_URL","message","history","botMsg","data","reply","productMsg","_parsed$tool_input","parsed","JSON","parse","tool","tool_input","id","prodRes","product","p","name","SKU","price","description","URL","err","stringify","handleClear","removeItem","className","children","onClick","map","msg","idx","onProductClick","style","display","justifyContent","padding","ref","onSubmit","alignItems","gap","value","onChange","target","placeholder","flex","type","minWidth","disabled","onResult","t"],"sources":["C:/Users/nelav/OneDrive/Desktop/Code Projects/hardware Store Bot/frontend/src/components/ChatbotSection.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nimport LoadingSpinner from './LoadingSpinner';\nimport VoiceButton from './VoiceButton';\nimport ChatBubble from './ChatBubble';\n\nexport default function ChatbotSection({ selectedProductSKU, setSelectedProductSKU }) {\n  const handleProductClick = sku => setSelectedProductSKU(sku);\n\n  const [messages, setMessages] = useState([\n    {\n      sender: 'agent',\n      text: 'Hi! What can I help you with?',\n      timestamp: new Date().toLocaleString()\n    }\n  ]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const chatEndRef = useRef(null);\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages, loading]);\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n    if (!input.trim() || loading) return;\n    const userMsg = { sender: 'user', text: input };\n    setMessages(msgs => [...msgs, userMsg]);\n    setInput('');\n    setLoading(true);\n    try {\n      let sessionId = localStorage.getItem('sessionId');\n      if (!sessionId) {\n        sessionId = (window.crypto?.randomUUID?.() || Date.now().toString());\n        localStorage.setItem('sessionId', sessionId);\n      }\n      const res = await axios.post(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/chat`, {\n        message: input,\n        history: messages,\n        sessionId,\n      });\n\n      // Check if the response looks like a tool call for openProductDetail\n      let botMsg = res.data.reply;\n      let productMsg = null;\n      try {\n        const parsed = typeof botMsg === 'string' ? JSON.parse(botMsg) : botMsg;\n        if (parsed && parsed.tool === 'openProductDetail' && parsed.tool_input?.id) {\n          // Fetch product detail from backend\n          const prodRes = await axios.post('http://localhost:5000/api/openProductDetail', {\n            sku: parsed.tool_input.id\n          });\n          if (prodRes.data && prodRes.data.product) {\n            const p = prodRes.data.product;\n            productMsg = `Product Details\\nName: ${p.name || ''}\\nSKU: ${p.SKU || ''}\\nPrice: $${p.price || ''}\\n${p.description ? 'Description: ' + p.description + '\\n' : ''}${p.URL ? 'URL: ' + p.URL : ''}`;\n          } else {\n            productMsg = 'Product not found.';\n          }\n        }\n      } catch (err) { /* Not a tool call, treat as normal reply */ }\n\n      setMessages(msgs => [\n        ...msgs,\n        { sender: 'agent', text: productMsg || (typeof botMsg === 'string' ? botMsg : JSON.stringify(botMsg)) }\n      ]);\n    } catch (err) {\n      setMessages(msgs => [...msgs, { sender: 'agent', text: 'Sorry, there was an error connecting to the assistant.' }]);\n    }\n    setLoading(false);\n  };\n\n\n  const handleClear = () => {\n    setMessages([{ sender: 'agent', text: 'Hi! What can I help you with?' }]);\n    setInput('');\n    localStorage.removeItem('sessionId');\n  };\n\n  return (\n    <section className=\"chatbot-section\">\n      <div className=\"chatbot-header\">\n        <div className=\"chatbot-title\">Chatbot</div>\n        <button className=\"btn-clear\" onClick={handleClear}>Clear Chat</button>\n      </div>\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, idx) => (\n          <ChatBubble key={idx} message={msg} onProductClick={handleProductClick} />\n        ))}\n        {loading && (\n          <div style={{ display: 'flex', justifyContent: 'center', padding: 8 }}>\n            <LoadingSpinner />\n          </div>\n        )}\n        <div ref={chatEndRef} />\n      </div>\n      <form className=\"chatbot-input\" onSubmit={handleSend} style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\n        <input\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          style={{ flex: 1 }}\n        />\n        <button type=\"submit\" style={{ minWidth: 60 }}>Send</button>\n        <VoiceButton disabled={loading} onResult={t => setInput(t)} />\n      </form>\n    </section>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,UAAU,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,cAAe,SAAS,CAAAC,cAAcA,CAAAC,IAAA,CAAgD,IAA/C,CAAEC,kBAAkB,CAAEC,qBAAsB,CAAC,CAAAF,IAAA,CAClF,KAAM,CAAAG,kBAAkB,CAAGC,GAAG,EAAIF,qBAAqB,CAACE,GAAG,CAAC,CAE5D,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGlB,QAAQ,CAAC,CACvC,CACEmB,MAAM,CAAE,OAAO,CACfC,IAAI,CAAE,+BAA+B,CACrCC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CACvC,CAAC,CACF,CAAC,CACF,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAC0B,OAAO,CAAEC,UAAU,CAAC,CAAG3B,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAA4B,UAAU,CAAG3B,MAAM,CAAC,IAAI,CAAC,CAE/BC,SAAS,CAAC,IAAM,KAAA2B,mBAAA,CACd,CAAAA,mBAAA,CAAAD,UAAU,CAACE,OAAO,UAAAD,mBAAA,iBAAlBA,mBAAA,CAAoBE,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAC5D,CAAC,CAAE,CAACf,QAAQ,CAAES,OAAO,CAAC,CAAC,CAEvB,KAAM,CAAAO,UAAU,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAACX,KAAK,CAACY,IAAI,CAAC,CAAC,EAAIV,OAAO,CAAE,OAC9B,KAAM,CAAAW,OAAO,CAAG,CAAElB,MAAM,CAAE,MAAM,CAAEC,IAAI,CAAEI,KAAM,CAAC,CAC/CN,WAAW,CAACoB,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAED,OAAO,CAAC,CAAC,CACvCZ,QAAQ,CAAC,EAAE,CAAC,CACZE,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,GAAI,CAAAY,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CACjD,GAAI,CAACF,SAAS,CAAE,KAAAG,cAAA,CAAAC,qBAAA,CACdJ,SAAS,CAAI,EAAAG,cAAA,CAAAE,MAAM,CAACC,MAAM,UAAAH,cAAA,kBAAAC,qBAAA,CAAbD,cAAA,CAAeI,UAAU,UAAAH,qBAAA,iBAAzBA,qBAAA,CAAAI,IAAA,CAAAL,cAA4B,CAAC,GAAIpB,IAAI,CAAC0B,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAE,CACpET,YAAY,CAACU,OAAO,CAAC,WAAW,CAAEX,SAAS,CAAC,CAC9C,CACA,KAAM,CAAAY,GAAG,CAAG,KAAM,CAAAhD,KAAK,CAACiD,IAAI,IAAAC,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,cAAa,CACnGC,OAAO,CAAEjC,KAAK,CACdkC,OAAO,CAAEzC,QAAQ,CACjBsB,SACF,CAAC,CAAC,CAEF;AACA,GAAI,CAAAoB,MAAM,CAAGR,GAAG,CAACS,IAAI,CAACC,KAAK,CAC3B,GAAI,CAAAC,UAAU,CAAG,IAAI,CACrB,GAAI,KAAAC,kBAAA,CACF,KAAM,CAAAC,MAAM,CAAG,MAAO,CAAAL,MAAM,GAAK,QAAQ,CAAGM,IAAI,CAACC,KAAK,CAACP,MAAM,CAAC,CAAGA,MAAM,CACvE,GAAIK,MAAM,EAAIA,MAAM,CAACG,IAAI,GAAK,mBAAmB,GAAAJ,kBAAA,CAAIC,MAAM,CAACI,UAAU,UAAAL,kBAAA,WAAjBA,kBAAA,CAAmBM,EAAE,CAAE,CAC1E;AACA,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAnE,KAAK,CAACiD,IAAI,CAAC,6CAA6C,CAAE,CAC9EpC,GAAG,CAAEgD,MAAM,CAACI,UAAU,CAACC,EACzB,CAAC,CAAC,CACF,GAAIC,OAAO,CAACV,IAAI,EAAIU,OAAO,CAACV,IAAI,CAACW,OAAO,CAAE,CACxC,KAAM,CAAAC,CAAC,CAAGF,OAAO,CAACV,IAAI,CAACW,OAAO,CAC9BT,UAAU,2BAAAT,MAAA,CAA6BmB,CAAC,CAACC,IAAI,EAAI,EAAE,YAAApB,MAAA,CAAUmB,CAAC,CAACE,GAAG,EAAI,EAAE,eAAArB,MAAA,CAAamB,CAAC,CAACG,KAAK,EAAI,EAAE,OAAAtB,MAAA,CAAKmB,CAAC,CAACI,WAAW,CAAG,eAAe,CAAGJ,CAAC,CAACI,WAAW,CAAG,IAAI,CAAG,EAAE,EAAAvB,MAAA,CAAGmB,CAAC,CAACK,GAAG,CAAG,OAAO,CAAGL,CAAC,CAACK,GAAG,CAAG,EAAE,CAAE,CACrM,CAAC,IAAM,CACLf,UAAU,CAAG,oBAAoB,CACnC,CACF,CACF,CAAE,MAAOgB,GAAG,CAAE,CAAE,6CAEhB5D,WAAW,CAACoB,IAAI,EAAI,CAClB,GAAGA,IAAI,CACP,CAAEnB,MAAM,CAAE,OAAO,CAAEC,IAAI,CAAE0C,UAAU,GAAK,MAAO,CAAAH,MAAM,GAAK,QAAQ,CAAGA,MAAM,CAAGM,IAAI,CAACc,SAAS,CAACpB,MAAM,CAAC,CAAE,CAAC,CACxG,CAAC,CACJ,CAAE,MAAOmB,GAAG,CAAE,CACZ5D,WAAW,CAACoB,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,CAAEnB,MAAM,CAAE,OAAO,CAAEC,IAAI,CAAE,wDAAyD,CAAC,CAAC,CAAC,CACrH,CACAO,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAGD,KAAM,CAAAqD,WAAW,CAAGA,CAAA,GAAM,CACxB9D,WAAW,CAAC,CAAC,CAAEC,MAAM,CAAE,OAAO,CAAEC,IAAI,CAAE,+BAAgC,CAAC,CAAC,CAAC,CACzEK,QAAQ,CAAC,EAAE,CAAC,CACZe,YAAY,CAACyC,UAAU,CAAC,WAAW,CAAC,CACtC,CAAC,CAED,mBACEvE,KAAA,YAASwE,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAClCzE,KAAA,QAAKwE,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B3E,IAAA,QAAK0E,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,SAAO,CAAK,CAAC,cAC5C3E,IAAA,WAAQ0E,SAAS,CAAC,WAAW,CAACE,OAAO,CAAEJ,WAAY,CAAAG,QAAA,CAAC,YAAU,CAAQ,CAAC,EACpE,CAAC,cACNzE,KAAA,QAAKwE,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAC9BlE,QAAQ,CAACoE,GAAG,CAAC,CAACC,GAAG,CAAEC,GAAG,gBACrB/E,IAAA,CAACF,UAAU,EAAWmD,OAAO,CAAE6B,GAAI,CAACE,cAAc,CAAEzE,kBAAmB,EAAtDwE,GAAwD,CAC1E,CAAC,CACD7D,OAAO,eACNlB,IAAA,QAAKiF,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,OAAO,CAAE,CAAE,CAAE,CAAAT,QAAA,cACpE3E,IAAA,CAACJ,cAAc,GAAE,CAAC,CACf,CACN,cACDI,IAAA,QAAKqF,GAAG,CAAEjE,UAAW,CAAE,CAAC,EACrB,CAAC,cACNlB,KAAA,SAAMwE,SAAS,CAAC,eAAe,CAACY,QAAQ,CAAE7D,UAAW,CAACwD,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEK,UAAU,CAAE,QAAQ,CAAEC,GAAG,CAAE,CAAE,CAAE,CAAAb,QAAA,eAC7G3E,IAAA,UACEyF,KAAK,CAAEzE,KAAM,CACb0E,QAAQ,CAAEhE,CAAC,EAAIT,QAAQ,CAACS,CAAC,CAACiE,MAAM,CAACF,KAAK,CAAE,CACxCG,WAAW,CAAC,mBAAmB,CAC/BX,KAAK,CAAE,CAAEY,IAAI,CAAE,CAAE,CAAE,CACpB,CAAC,cACF7F,IAAA,WAAQ8F,IAAI,CAAC,QAAQ,CAACb,KAAK,CAAE,CAAEc,QAAQ,CAAE,EAAG,CAAE,CAAApB,QAAA,CAAC,MAAI,CAAQ,CAAC,cAC5D3E,IAAA,CAACH,WAAW,EAACmG,QAAQ,CAAE9E,OAAQ,CAAC+E,QAAQ,CAAEC,CAAC,EAAIjF,QAAQ,CAACiF,CAAC,CAAE,CAAE,CAAC,EAC1D,CAAC,EACA,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}