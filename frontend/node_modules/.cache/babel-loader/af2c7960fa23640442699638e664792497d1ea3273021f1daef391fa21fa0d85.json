{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nelav\\\\OneDrive\\\\Desktop\\\\Code Projects\\\\hardware Store Bot\\\\frontend\\\\src\\\\components\\\\ChatbotSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport LoadingSpinner from './LoadingSpinner';\nimport VoiceButton from './VoiceButton';\nimport ChatBubble from './ChatBubble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatbotSection({\n  selectedProductSKU,\n  setSelectedProductSKU\n}) {\n  _s();\n  const handleProductClick = sku => setSelectedProductSKU(sku);\n  const [messages, setMessages] = useState([{\n    sender: 'agent',\n    text: 'Hi! What can I help you with?',\n    timestamp: new Date().toLocaleString()\n  }]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages, loading]);\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!input.trim() || loading) return;\n    const userMsg = {\n      sender: 'user',\n      text: input\n    };\n    setMessages(msgs => [...msgs, userMsg]);\n    setInput('');\n    setLoading(true);\n    try {\n      let sessionId = localStorage.getItem('sessionId');\n      if (!sessionId) {\n        var _window$crypto, _window$crypto$random;\n        sessionId = ((_window$crypto = window.crypto) === null || _window$crypto === void 0 ? void 0 : (_window$crypto$random = _window$crypto.randomUUID) === null || _window$crypto$random === void 0 ? void 0 : _window$crypto$random.call(_window$crypto)) || Date.now().toString();\n        localStorage.setItem('sessionId', sessionId);\n      }\n      const res = await axios.post('http://localhost:5000/api/chat', {\n        message: input,\n        history: messages,\n        sessionId\n      });\n\n      // Check if the response looks like a tool call for openProductDetail\n      let botMsg = res.data.reply;\n      let productMsg = null;\n      try {\n        var _parsed$tool_input;\n        const parsed = typeof botMsg === 'string' ? JSON.parse(botMsg) : botMsg;\n        if (parsed && parsed.tool === 'openProductDetail' && (_parsed$tool_input = parsed.tool_input) !== null && _parsed$tool_input !== void 0 && _parsed$tool_input.id) {\n          // Fetch product detail from backend\n          const prodRes = await axios.post('http://localhost:5000/api/openProductDetail', {\n            sku: parsed.tool_input.id\n          });\n          if (prodRes.data && prodRes.data.product) {\n            const p = prodRes.data.product;\n            productMsg = `Product Details\\nName: ${p.name || ''}\\nSKU: ${p.SKU || ''}\\nPrice: $${p.price || ''}\\n${p.description ? 'Description: ' + p.description + '\\n' : ''}${p.URL ? 'URL: ' + p.URL : ''}`;\n          } else {\n            productMsg = 'Product not found.';\n          }\n        }\n      } catch (err) {/* Not a tool call, treat as normal reply */}\n      setMessages(msgs => [...msgs, {\n        sender: 'agent',\n        text: productMsg || (typeof botMsg === 'string' ? botMsg : JSON.stringify(botMsg))\n      }]);\n    } catch (err) {\n      setMessages(msgs => [...msgs, {\n        sender: 'agent',\n        text: 'Sorry, there was an error connecting to the assistant.'\n      }]);\n    }\n    setLoading(false);\n  };\n  const handleClear = () => {\n    setMessages([{\n      sender: 'agent',\n      text: 'Hi! What can I help you with?'\n    }]);\n    setInput('');\n    localStorage.removeItem('sessionId');\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chatbot-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-title\",\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-clear\",\n        onClick: handleClear,\n        children: \"Clear Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(ChatBubble, {\n        message: msg,\n        onProductClick: handleProductClick\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          padding: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-input\",\n      onSubmit: handleSend,\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        style: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          minWidth: 60\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VoiceButton, {\n        disabled: loading,\n        onResult: t => setInput(t)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatbotSection, \"tS+NyCLWmSaUN3K35c7v6bBUFtw=\");\n_c = ChatbotSection;\nvar _c;\n$RefreshReg$(_c, \"ChatbotSection\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","LoadingSpinner","VoiceButton","ChatBubble","jsxDEV","_jsxDEV","ChatbotSection","selectedProductSKU","setSelectedProductSKU","_s","handleProductClick","sku","messages","setMessages","sender","text","timestamp","Date","toLocaleString","input","setInput","loading","setLoading","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","handleSend","e","preventDefault","trim","userMsg","msgs","sessionId","localStorage","getItem","_window$crypto","_window$crypto$random","window","crypto","randomUUID","call","now","toString","setItem","res","post","message","history","botMsg","data","reply","productMsg","_parsed$tool_input","parsed","JSON","parse","tool","tool_input","id","prodRes","product","p","name","SKU","price","description","URL","err","stringify","handleClear","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","idx","onProductClick","style","display","justifyContent","padding","ref","onSubmit","alignItems","gap","value","onChange","target","placeholder","flex","type","minWidth","disabled","onResult","t","_c","$RefreshReg$"],"sources":["C:/Users/nelav/OneDrive/Desktop/Code Projects/hardware Store Bot/frontend/src/components/ChatbotSection.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nimport LoadingSpinner from './LoadingSpinner';\nimport VoiceButton from './VoiceButton';\nimport ChatBubble from './ChatBubble';\n\nexport default function ChatbotSection({ selectedProductSKU, setSelectedProductSKU }) {\n  const handleProductClick = sku => setSelectedProductSKU(sku);\n\n  const [messages, setMessages] = useState([\n    {\n      sender: 'agent',\n      text: 'Hi! What can I help you with?',\n      timestamp: new Date().toLocaleString()\n    }\n  ]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const chatEndRef = useRef(null);\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages, loading]);\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n    if (!input.trim() || loading) return;\n    const userMsg = { sender: 'user', text: input };\n    setMessages(msgs => [...msgs, userMsg]);\n    setInput('');\n    setLoading(true);\n    try {\n      let sessionId = localStorage.getItem('sessionId');\n      if (!sessionId) {\n        sessionId = (window.crypto?.randomUUID?.() || Date.now().toString());\n        localStorage.setItem('sessionId', sessionId);\n      }\n      const res = await axios.post('http://localhost:5000/api/chat', {\n        message: input,\n        history: messages,\n        sessionId,\n      });\n\n      // Check if the response looks like a tool call for openProductDetail\n      let botMsg = res.data.reply;\n      let productMsg = null;\n      try {\n        const parsed = typeof botMsg === 'string' ? JSON.parse(botMsg) : botMsg;\n        if (parsed && parsed.tool === 'openProductDetail' && parsed.tool_input?.id) {\n          // Fetch product detail from backend\n          const prodRes = await axios.post('http://localhost:5000/api/openProductDetail', {\n            sku: parsed.tool_input.id\n          });\n          if (prodRes.data && prodRes.data.product) {\n            const p = prodRes.data.product;\n            productMsg = `Product Details\\nName: ${p.name || ''}\\nSKU: ${p.SKU || ''}\\nPrice: $${p.price || ''}\\n${p.description ? 'Description: ' + p.description + '\\n' : ''}${p.URL ? 'URL: ' + p.URL : ''}`;\n          } else {\n            productMsg = 'Product not found.';\n          }\n        }\n      } catch (err) { /* Not a tool call, treat as normal reply */ }\n\n      setMessages(msgs => [\n        ...msgs,\n        { sender: 'agent', text: productMsg || (typeof botMsg === 'string' ? botMsg : JSON.stringify(botMsg)) }\n      ]);\n    } catch (err) {\n      setMessages(msgs => [...msgs, { sender: 'agent', text: 'Sorry, there was an error connecting to the assistant.' }]);\n    }\n    setLoading(false);\n  };\n\n\n  const handleClear = () => {\n    setMessages([{ sender: 'agent', text: 'Hi! What can I help you with?' }]);\n    setInput('');\n    localStorage.removeItem('sessionId');\n  };\n\n  return (\n    <section className=\"chatbot-section\">\n      <div className=\"chatbot-header\">\n        <div className=\"chatbot-title\">Chatbot</div>\n        <button className=\"btn-clear\" onClick={handleClear}>Clear Chat</button>\n      </div>\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, idx) => (\n          <ChatBubble key={idx} message={msg} onProductClick={handleProductClick} />\n        ))}\n        {loading && (\n          <div style={{ display: 'flex', justifyContent: 'center', padding: 8 }}>\n            <LoadingSpinner />\n          </div>\n        )}\n        <div ref={chatEndRef} />\n      </div>\n      <form className=\"chatbot-input\" onSubmit={handleSend} style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\n        <input\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          style={{ flex: 1 }}\n        />\n        <button type=\"submit\" style={{ minWidth: 60 }}>Send</button>\n        <VoiceButton disabled={loading} onResult={t => setInput(t)} />\n      </form>\n    </section>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}